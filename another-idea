apiVersion: v1
kind: Template
labels:
template: nexus3-persistent-template
metadata:
name: nexus3-persistent
annotations:
description: Sonatype Nexus 3 persistent template
tags: ci,nexus
objects:
- apiVersion: v1
kind: ImageStream
metadata:
labels:
app: ${SERVICE_NAME}
name: ${SERVICE_NAME}
spec:
tags:
- from:
kind: DockerImage
name: docker.io/sonatype/nexus3:${NEXUS_VERSION}
name: ${NEXUS_VERSION}
- apiVersion: v1
kind: DeploymentConfig
metadata:
labels:
app: ${SERVICE_NAME}
name: ${SERVICE_NAME}
spec:
replicas: 1
selector:
deploymentconfig: ${SERVICE_NAME}
strategy:
recreateParams:
timeoutSeconds: 600
post:
failurePolicy: Abort
execNewPod:
containerName: ${SERVICE_NAME}
command:
- "/bin/bash"
- "-c"
- "curl -o /tmp/nexus-functions -s https://raw.githubusercontent.com/OpenShiftDemos/nexus/master/scripts/nexus-functions; source /tmp/nexus-functions; add_nexus3_redhat_repos admin admin123 http://${SERVICE_NAME}:8081"
type: Recreate
template:
metadata:
labels:
deploymentconfig: ${SERVICE_NAME}
spec:
containers:
- env:
- name: CONTEXT_PATH
value: /
image: ' '
imagePullPolicy: IfNotPresent
livenessProbe:
exec:
command:
- echo
- ok
failureThreshold: 3
initialDelaySeconds: 30
periodSeconds: 10
successThreshold: 1
name: ${SERVICE_NAME}
ports:
- containerPort: 8081
protocol: TCP
readinessProbe:
failureThreshold: 3
httpGet:
path: /
port: 8081
schemes: HTTPS
initialDelaySeconds: 30
periodSeconds: 100
successThreshold: 2
timeoutSeconds: 1
resources:
limits:
memory: ${MAX_MEMORY}
requests:
memory: 512Mi
terminationMessagePath: /dev/termination-log
volumeMounts:
- mountPath: /nexus-data
name: ${SERVICE_NAME}-data
dnsPolicy: ClusterFirst
restartPolicy: Always
securityContext: {}
terminationGracePeriodSeconds: 30
volumes:
- name: ${SERVICE_NAME}-data
persistentVolumeClaim:
claimName: ${SERVICE_NAME}-pv
test: false
triggers:
- type: ConfigChange
- imageChangeParams:
automatic: true
